name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  ai-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: AI Code Review
        uses: actions/github-script@v7
        with:
          script: |
            const OPENROUTER_API_KEY = '${{ secrets.OPENROUTER_API_KEY }}';

            const diff = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: context.payload.pull_request.base.sha,
              head: context.payload.pull_request.head.sha
            });

            // Î¶¨Î∑∞Ìï† ÌååÏùº ÌïÑÌÑ∞ÎßÅ
            const filesToReview = diff.data.files.filter(file =>
              file.patch && 
              !file.filename.includes('node_modules/') &&
              !file.filename.includes('.expo/') &&
              !file.filename.includes('dist/') &&
              !file.filename.endsWith('.lock')
            );

            if (filesToReview.length === 0) {
              console.log('No files to review');
              return;
            }

            // Ï†ÑÏ≤¥ Î≥ÄÍ≤ΩÏÇ¨Ìï≠ ÏàòÏßë
            let allChanges = '';
            const filesSummary = [];
            
            for (const file of filesToReview) {
              filesSummary.push(`- ${file.filename} (+${file.additions}/-${file.deletions})`);
              allChanges += `\n### ${file.filename}\n`;
              allChanges += `\`\`\`diff\n${file.patch}\n\`\`\`\n`;
            }

            // AI Î¶¨Î∑∞ ÏöîÏ≤≠
            const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
              method: 'POST',
              headers: {
                'Authorization': `Bearer ${OPENROUTER_API_KEY}`,
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                model: 'openrouter/sonoma-sky-alpha',
                messages: [{
                  role: 'system',
                  content: `React Native ÌîÑÎ°†Ìä∏ÏóîÎìú ÏΩîÎìú Î¶¨Î∑∞Ïñ¥ÏûÖÎãàÎã§.

                  ## üî¥ Ï†àÎåÄ Í∑úÏπô (Î∞òÎìúÏãú Ï≤¥ÌÅ¨)
                  
                  1. **Ïª¥Ìè¨ÎÑåÌä∏ 100Ï§Ñ Ï†úÌïú** - Ï¥àÍ≥ºÏãú Ï¶âÏãú Î∂ÑÎ¶¨ ÌïÑÏöî
                  2. **React.memo() ÌïÑÏàò** - Î™®Îì† Î¶¨Ïä§Ìä∏ ÏïÑÏù¥ÌÖú Ïª¥Ìè¨ÎÑåÌä∏
                  3. **Ïä§ÌÉÄÏùº ÏúÑÏπò** - Ïª¥Ìè¨ÎÑåÌä∏ ÎÇ¥Î∂ÄÏóêÎßå (Î≥ÑÎèÑ ÌååÏùº Í∏àÏßÄ)
                  4. **any ÌÉÄÏûÖ Í∏àÏßÄ** - Î∞òÎìúÏãú proper TypeScript ÌÉÄÏûÖ ÏÇ¨Ïö©
                  5. **ÏÉÅÌÉú Í¥ÄÎ¶¨** - Zustand(Ï†ÑÏó≠), React Query(ÏÑúÎ≤Ñ)
                  
                  ## Ï≤¥ÌÅ¨ Ìè¨Ïù∏Ìä∏
                  - [ ] 100Ï§Ñ ÎÑòÎäî Ïª¥Ìè¨ÎÑåÌä∏ ÏûàÎäîÍ∞Ä?
                  - [ ] Î¶¨Ïä§Ìä∏ ÏïÑÏù¥ÌÖúÏóê React.memo Ï†ÅÏö©ÌñàÎäîÍ∞Ä?
                  - [ ] any ÌÉÄÏûÖ ÏÇ¨Ïö©Ìïú Í≥≥ ÏûàÎäîÍ∞Ä?
                  - [ ] StyleSheet.create() ÏÇ¨Ïö©ÌñàÎäîÍ∞Ä?
                  - [ ] Î∂àÌïÑÏöîÌïú prop drilling ÏûàÎäîÍ∞Ä?`
                }, {
                  role: 'user',
                  content: `Îã§Ïùå ${filesToReview.length}Í∞ú ÌååÏùº Î¶¨Î∑∞:
                  
                  ${filesSummary.join('\n')}
                  
                  Î≥ÄÍ≤ΩÏÇ¨Ìï≠:
                  ${allChanges}
                  
                  Ï†àÎåÄ Í∑úÏπô ÏúÑÎ∞òÏÇ¨Ìï≠Îßå ÏßëÏ§ëÌï¥ÏÑú Î¶¨Î∑∞Ìï¥Ï£ºÏÑ∏Ïöî.`
                }],
                max_tokens: 8000,
                temperature: 0.3
              })
            });

            let reviewBody = `# ü§ñ AI ÏΩîÎìú Î¶¨Î∑∞\n\n`;
            reviewBody += `## üìä Î≥ÄÍ≤Ω ÌÜµÍ≥Ñ\n`;
            reviewBody += `- ÌååÏùº: ${filesToReview.length}Í∞ú\n`;
            reviewBody += `- Ï∂îÍ∞Ä: +${diff.data.files.reduce((sum, f) => sum + f.additions, 0)}\n`;
            reviewBody += `- ÏÇ≠Ï†ú: -${diff.data.files.reduce((sum, f) => sum + f.deletions, 0)}\n\n`;

            if (response.ok) {
              const result = await response.json();
              reviewBody += result.choices[0].message.content;
            } else {
              reviewBody += `‚ö†Ô∏è Î¶¨Î∑∞ Ïã§Ìå®: ${response.status}`;
            }

            // PR Î¶¨Î∑∞ Ï†úÏ∂ú
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              body: reviewBody,
              event: 'COMMENT'
            });

            console.log('‚úÖ Review completed!');